i32 axx,bxx,cxx = -3_000,+0b0000_0101,0x00_ff+a
r32 fxx = -123.45



enum cdd
   val
i32 ax = 1+3+ ~3
i32 bx = 1+2*3&4/5>>(-6)<<7||9+f(1,2,ax+bx)


// testing code for CLScript


/*
// testing of modules
i32 a

module A
i32 a
() fa(i32 v)
   a = v+1

module B
i32 a
() fa(i32 v)
   a = v*2
   
module C

[Entry]
(i32) test()
   A.fa(3) // module syntax
   B.fa(4)
   return A.a + B.a
*/

import "bob"   

module Monkeyballs

enum Bob 
   Fred  
   
   Al
   
enum Tokdog
   val  = 1234+12
   val1
   val3 = val1

enum Enum1
   val1 = 0b0001
   val2 = 0b0010
   
Enum1 ae = Enum1.val1 | Enum1.val2   

type type1
   i32 a
   r32 c,d,e
   bool flags[10,2]
   
[AttribT "attrib1" "attrib2"]
type type2

   type1 items[2],c
   
   bool live

[AttribV "attrib1" "attrib2"]
i32 a1
i32 a2,a3
import i32 a4,b4
export i32 a5,b5,c5[3] = 1,3,0,0,0
import const i32 a6
export const i32 a7,c7 = 1,2*2<<1
const r32 a8 = 10
i32 b9[4] = 1,2,3,4
i32 a10 = 10
bool c11 = 1>0
bool d12 = 1==1
i32 a13[3] = 1,2,3

(i32,r32,myType) testFunc(i32 a, r32 b, bool arr[,])
   return 0,1.0,"test"

export () setA()
   i32 a = 1
   i32 b = 2
   b,c[1,a].fred[1][4] /= f(10)
   mtType c[10,2]
   a,b += 1,4
   b %= 2

(i32) func(i32 a, string bs)
   i32 b = 1+2*3&4/5>>6<<7||9+f(1,2,a+b)   
   a += b
   fc("this is the end")
   return a/b

import (i32,r32,myType) importFunc(r32 val[], bool f1, i32 jj[,,])
  
[Attrib "attrib1" "attrib2"]
(i32,bool) func1(i32 bob[,], r32 fred)
   i32 a = 1234
   i32 b
   i32 b2[10]
   bool c = true
   for i in b2
      a+=i 
   if a == 10
      a = 5
   else if a < 10
      a = 11
   else
      a = 10
     
   return a
   
   
() func2()
   i32 a,b = 1,2*3
   a = 10+b
   for i in 1,2,b+a
      a += 10
      continue
   for j in 1,3
      b += 10
      break 
   while a < 10
      b += a
      a -= b
   a = 1
   f2(a,b)
   a = f2(a,b) // todo - this needs to be fixed!
   a,b = b,a 

