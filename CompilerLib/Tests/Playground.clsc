// playground for testing code

type RGB
   i32 r,g,b

(bool) CheckRGB(RGB c, i32 r, i32 g, i32 b)
   return c.r == r && c.g == g && c.b == b

[Entry]
export (i32,i32) TestComplexAssign()
   i32 p,t = 0,0 // passed,tested

   RGB c1 = 1,2,3
   if CheckRGB(c1,1,2,3)
      p++
   t++
   
   c1 = 6,3,2
   if CheckRGB(c1,6,3,2)
      p++
   t++
   
   // Get456() // test stack clean
   
   i32 a = 9
   c1 = a,a*a,a+a
   if CheckRGB(c1,9,81,18)
      p++
   t++
   
   c1 = Get456()
   if CheckRGB(c1,4,5,6)
      p++
   t++
   
   a,c1 = Get456(),7
   if CheckRGB(c1,5,6,7) && a == 4
      p++
   t++
   
   RGB c2 = c1
   if CheckRGB(c2,5,6,7)
      p++
   t++

   c1 += 6,2,5
   if CheckRGB(c1,11,8,12)
      p++
   t++
   
   c2 = Set789(c1)
   if CheckRGB(c1,7,8,9) // todo - this fails  && CheckRGB(c2,7,8,9)
      p++
   t++ 

   // todo - this fails
   //c1 += c1
   //if CheckRGB(c1,22,16,24)
   //   p++
   //t++
   
   return p,t
  
   
(RGB) Get456()
   RGB c1 = 4,5,6
   return c1

(RGB) Set789(RGB c)
   c = 7,8,9
   //RGB cc = 7,8,9
   return c

/*
[Entry]
export (i32) Test()
   i32 a[3] = 1,2,3
   a[1] = 5
   a = 1,2,3
   i32 b[2][2] = 0,1,2,3
   b[1] = 4,5
   b = 4,5,6,7
   return a[1]
*/
/*

type RGB
   i32 r,g,b
   
type RGB2
   RGB a
   RGB b
   
type RGBd
   RGB2 a
   RGB  b


[Entry]
export (bool,i32,i32) Play()
   i32 p,t = 0,0 // passed, tested
   
   RGB c1 = 4,6,9
   p,t = Test(p,t,c1.r == 4 && c1.g == 6 && c1.b == 9)
   
   
   RGB c2 = return3()
   p,t = Test(p,t,c2.r == -4 && c2.g == 15 && c2.b == 3)
   
   i32 a,b,c = 3,4,-7
   p,t = Test(p,t,a==3&&b==4&&c==-7)
   
   a,c2,b = -11,return3(),19
   p,t = Test(p,t, a == -11 && b == 19 && c2.r == -4 && c2.g == 15 && c2.b == 3)

//   RGB2 x = 1,return3(),9,2
//   p,t = Test(p,t,x.a.r == 1 && x.a.g == -4 && x.a.b == 15 && x.b.r == 3 && x.b.g == 9 && x.b.b == 2)  
   
   return p==t,p,t
   
(i32,i32,i32) return3()
   return -4,15,3
*/   